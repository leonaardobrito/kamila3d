/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 scene.gltf 
Author: Paul (https://sketchfab.com/paul_paul_paul)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/free-skybox-autumn-forest-3ba29976640c4b26a66d6cea0556b7d6
Title: FREE - SkyBox Autumn Forest
*/

import React, { useRef, useEffect, useLayoutEffect } from 'react'
import { useFrame, useThree } from '@react-three/fiber'
import { useGLTF, useScroll, OrbitControls } from '@react-three/drei'

export default function Model(props) {
  const scroll = useScroll()
  const { nodes, materials } = useGLTF('/scene.gltf')
  const { camera } = useThree();
  const controlsRef = useRef();

  useFrame((state, delta) => {
    // The offset is between 0 and 1, you can apply it to your models any way you like
    const offset = 1 - scroll.offset;
    // Calculate the position of the camera
    const x = Math.sin(offset * Math.PI * 2) * -10;
    const z = Math.cos(offset * Math.PI * 2) * -10;
    // Set the camera's position
    camera.position.set(x, camera.position.y, z);
    state.camera.lookAt(0, 0, 0);
  });

  return (
    <group {...props} dispose={null}>
      <group scale={[0.01, 0.01, 0.01]}>
        <mesh geometry={nodes.Sphere__0.geometry} material={materials['Scene_-_Root']} rotation={[-Math.PI / 2, 0, 0]} scale={50000} />
      </group><OrbitControls
        ref={controlsRef}
        enablePan={false}
        enableZoom={false}
        enableDamping
        dampingFactor={0.5}
        rotateSpeed={0.013}
        mouseButtons={{ LEFT: 1, RIGHT: 1, MIDDLE: 2 }}
      />
    </group>
  );
  // return (
  //   <group {...props} dispose={null}>
  //     <group scale={0.01}>
  //       <mesh geometry={nodes.Sphere__0.geometry} material={materials['Scene_-_Root']} rotation={[-Math.PI / 2, 0, 0]} scale={50000} />
  //     </group>
  //   </group>
  // )
}

useGLTF.preload('/scene.gltf')


// import React, { useRef } from 'react'
// import { useGLTF } from '@react-three/drei'

// export function Model(props) {
//   const { nodes, materials } = useGLTF('/scene.gltf')
//   return (
//     <group {...props} dispose={null}>
//       <group scale={0.01}>
//         <mesh geometry={nodes.Sphere__0.geometry} material={materials['Scene_-_Root']} rotation={[-Math.PI / 2, 0, 0]} scale={50000} />
//       </group>
//     </group>
//   )
// }

// useGLTF.preload('/scene.gltf')